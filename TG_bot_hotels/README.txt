Краткое описание проекта и файлов:

1) Основной файл: main_test_hotels_site_API.py:
здесь происходит тестирование основных команд (low, high, custom, history (просто пока для вида - потом доработаю)),
а также вывод конечного результата.

2) файл hotel.py - используется, чтобы хранить все основные данные об отеле в виде объекта.

3) файл userData.py - запрашивает основные данные у пользователя:
дату приезда и отъезда, количество комнат, количество людей в каждой комнате, город, где отель находится.

4) папка city_id_request - здесь представлены файлы для работы с ведённым пользователем городом:
ТАК КАК для запроса отелей нужен id города, а его можно получить с помощью запроса с указанием города, то
нужна передача данных в запрос, безопасное хранение данных о ключе и хосте, а также кэширование данных, чтобы не делать
лишние запросы, а доставать данные уже из обработанных запросов, ТО были реализованы следующие вспомогательные инструменты для
работы с запросом:
1. для запроса вышеупомянутый файл userData.py
2. для безопасности использовался файл settings.py в связке с .env
3.1 для кэширования использовался файл cities_id_file.json (TG_bot_hotels/hotels_site_API/utils/requests/city_id_request/cities_id_file.json)
3.2 также для кэша использовались дополнительные методы в файле city_handler.py в методе _get_city_id

5) для получения всех properties (списка отелей по запросу) используются файлы из папки API_datas_connection

6) конечные команды (custom, high, low) реализованы в папке comands: custom_command.py, high_low_command.py
----

Следующий шаг: подключение telebot и работа с данными уже через API телеграмма и запросов пользователя оттуда.
Последним шагом будет реализация базы данных с использованием ORM для хранения истории запросов пользователя.